def maximumLength(nums: List[int]) -> int:
    """
    You are given an integer array nums.
    A subsequence sub of nums with length x is called valid if it satisfies:
    (sub[0] + sub[1]) % 2 == (sub[1] + sub[2]) % 2 == ... == (sub[x - 2] + sub[x - 1]) % 2.
    Return the length of the longest valid subsequence of nums.
    
    A subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.
    
    Examples :
    >>> maximumLength([1,2,3,4])
    4
    
    >>> maximumLength([1,2,1,1,2,1,2])
    6
    
    >>> maximumLength([1,3])
    2
    
    Constraints:
    2 <= nums.length <= 2 * 10^5
    1 <= nums[i] <= 10^7
    """

